insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('101','!','!expr','逻辑否','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('102','%','expr1%expr2','返回expr1/expr2的余数','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('103','&','expr1 & expr2','返回expr1 和 expr2按位与的结果','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('104','*','expr1 * expr2','返回 expr1 和 expr2 的乘积','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('105','+','expr1 + expr2','返回 expr1 和 expr2 的和','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('106','-','expr1-expr2','返回 expr1 减去 expr2 的结果','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('107','/','expr1/expr2','返回 expr1 除以 expr2 的结果','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('108','<','expr1 < expr2?','如果expr1小于expr2则结果返回true','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('109','<=','expr1 <= expr2?','如果expr1小于等于expr2则结果返回true','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('110','<=>','expr1 <=> expr2','和 = 运算符相同，但是如果两者都为null则返回true，只有一个为null则返回false','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('111','=','expr1 = expr2','如果 expr1 等于 expr2 则返回true，否则返回false','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('112','==','expr1 == expr2','和 = 运算符相同','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('113','>','expr1 > expr2','如果 expr1 大于 expr2 则结果返回true','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('114','>=','expr1 >= expr2','如果 expr1 大于等于 expr2 则结果返回true','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('115','^','expr1 ^ expr2?','返回 expr1 和 expr2 按位异或的结果','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('116','abs','abs(expr)','计算 exp r的绝对值','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('117','acos','acos(expr)','求expr的反余弦值','1','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('118','add_months','add_months(start_date, num_months)','返回start_date时间下再增加num_months个月的日期','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('119','and','expr1 and expr2','逻辑and','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('120','approx_count_distinct','approx_count_distinct(expr[, relativeSD])','通过HyperLogLog ++返回估计的基数，relativeSD定义允许的最大估计误差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('121','array','array(expr, ...)','返回给定元素的数组','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('122','array_contains',' array_contains(Array<T>, value)','如该数组Array<T>包含value返回true，否则返回false','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('123','ascii','ascii(str)','返回str中首个ASCII字符串的整数值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('124','asin','asin(expr)','返回 expr 的反正弦值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('125','assert_true','assert_true(expr)','如果expr不为true则抛异常','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('126','atan','atan(expr)','返回 expr 的反正切值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('127','atan2','atan2(expr1, expr2)','返回平面的正x轴与由坐标（expr1，expr2）给定的点之间的弧度角度','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('128','avg','avg(expr)','返回expr列的平均值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('129','base64','base64(bin)','返回二进制bin转换成64位的字符串','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('130','bigint','bigint(expr)','将expr转换为bigint类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('131','bin','bin(expr)','返回long值expr转换成的二进制的表现形式','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('132','binary','binary(expr)','将expr转换成binary类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('133','boolean','boolean(expr) ','将expr转换成boolean类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('134','bround','bround(expr, d)','返回使用HALF_EVEN舍入法（银行家舍入法）计算expr精确到小数点后d位置的值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('135','cbrt','cbrt(expr)','返回 expr 的立方根','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('136','ceil','ceil(expr)','返回不小于expr的最小整数值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('137','ceiling','ceiling(expr)','返回不小于expr的最小整数值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('138','coalesce','coalesce(expr1, expr2, ...)','返回第一个非NULL的值，如果全部都为NULL就返回NULL','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('139','collect_list','collect_list(expr)','返回 expr 列可重复的一组值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('140','collect_set','collect_set(expr)','返回 expr 列不可重复的一组值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('141','concat','concat(str1, str2, ..., strN)','返回给定的一组字符串拼接后的结果','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('142','concat_ws','concat_ws(sep, [str | array(str)]+)','返回指定第一个元素sep为分隔符的后面所有元素（可以有Array类型）拼接后的结果','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('143','conv','conv(num, from_base, to_base)','将num从from_base进制转换成to_base进制（num本来为from_base进制）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('144','corr','corr(expr1, expr2)','返回 expr1 列和 expr2 列的皮尔森相关系数','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('145','cos','cos(expr)','返回expr的余弦值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('146','cosh','cosh(expr)','返回expr的双曲余弦','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('147','count','count(*), count(expr), count(DISTINCT expr[, expr...])','统计总行数（包括含有NULL值的行）,统计提供非NULL的expr表达式值的行数,统计提供非NULL且去重后的expr表达式值的行数','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('148','covar_pop','covar_pop(expr1, expr2)?','求expr1和expr2的总体协方差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('149','covar_samp','covar_samp(expr1, expr2)','求expr1和expr2的样本协方差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('150','crc32','crc32(expr) ','返回expr的crc32校验值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('151','cube','N/A','N/A','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('152','cume_dist','cume_dist()','计算在分区中某个值对于所有值的位置','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('153','current_database','current_database()','返回当前的database','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('154','current_date','current_date()','返回当前时间日期','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('155','current_timestamp','current_timestamp()','返回当前时间戳','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('156','date','date(expr AS type)','把expr值转换成type类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('157','date_add','date_add(start_date, num_days)','返回日期start_date加上num_days天后的日期','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('158','date_format','date_format(timestamp, format)','返回将date按照format指定格式格式化后的字符串','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('159','date_sub','date_sub(start_date, num_days)','返回日期startdate减去days天后的日期','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('160','datediff','datediff(endDate, startDate)','计算开始时间startdate到结束时间enddate相差的天数（如果enddate比startdate时间更早，则返回负数）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('161','day','day(date)','返回date/timestamp格式的按照月的第多少天的值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('162','dayofmonth','dayofmonth(date)','返回date/timestamp格式的按照月的第多少天的值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('163','dayofyear','dayofyear(date)','返回date/timestamp格式的按照年的第多少天的值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('164','decimal','decimal(expr)','将expr转换成decimal类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('165','decode','decode(bin, charset)','使用第二个参数指定的字符集来对第一个参数进行解码','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('166','degrees','degrees(expr)','将弧度值转换成角度值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('167','dense_rank','dense_rank()','计算某值在一组值中的等级，按照数字递增的形式命名等级，与rank()不同，dense_rank()不会产生间隙','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('168','double','double(expr)','将expr转换成double类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('169','e','e()','返回数学常数（又称欧拉数）e','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('170','elt','elt(n, str1, str2, ...)','返回第n个字符串','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('171','encode','encode(str, charset)','使用charset字符集对str进行编码','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('172','exp','exp(expr)','返回e的expr幂次方','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('173','explode','explode(expr)?','将Array格式的expr分割成多行或者Map格式的expr分割成多行和多列','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('174','expm1','expm1(expr)','返回exp（expr） - 1','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('175','factorial','factorial(expr)','返回expr的阶乘，如果expr不是0到20，则返回NULL','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('176','find_in_set','find_in_set(str, str_array)','如果str_array是以逗号分割的字符串，返回str字符串在str_array中的位置。如果str含有逗号，或者str在str_array中找不到，则返回0','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('177','first','first(expr[, isIgnoreNull])','返回expr列的第一个值，如果isIgnoreNull是true，则只返回非null值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('178','first_value','first_value(expr[, isIgnoreNull])','返回expr列的第一个值，如果isIgnoreNull是true，则只返回非null值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('179','float','float(expr) ','将expr转换成float类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('180','floor','floor(expr)','返回不大于expr的最大整数','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('181','format_number','format_number(expr1, expr2)','将expr转换成"#,###,###.##"格式字符串，并保留expr2位小数，如果expr2为0，将进行四舍五入且不保留小数（同mysql中的format函数）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('182','format_string','format_string(strfmt, obj, ...)?','这个方法就像C语言中的printf方法一样使用','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('183','from_unixtime','from_unixtime(unix_time, format)','将unix时间通过指定的format格式格式化','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('184','from_utc_timestamp','from_utc_timestamp(timestamp, timezone)','将对应UTC时间timestamp转换成指定时区timezone下的时间戳','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('185','get_json_object','get_json_object(json_txt, path)','通过path将指定的json文本json_txt中的某个json对象提取出来','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('186','gettupleid','N/A','N/A','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('187','greatest','greatest(expr, ...)','求最大值（跳过null）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('188','grouping','N/A','N/A','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('189','grouping_id','N/A','N/A','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('190','hash','hash(expr1, expr2, ...)','返回这组参数的hash值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('191','hex','hex(expr)','返回expr的十六进制','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('192','hour','hour(timestamp)?','返回 timstamp（string/timestamp）的小时的值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('193','hypot','hypot(expr1, expr2)','返回expr1与expr2的平方和的根号','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('194','if','if(expr1, expr2, expr3)','如果expr1为true，则返回expr2，否则返回expr3','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('195','ifnull','ifnull(expr1, expr2)','expr1不为null则返回expr1，否则返回expr2','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('196','in','expr1 in(expr2, expr3, ...)','如果expr1等于括号内的任意元素，则返回true','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('197','initcap','initcap(str)','将str通过空格分割成的每个词首字母转为大写，其他字母转换为小写','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('198','inline','inline(expr)','将一组structs元素劈开成一张表','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('199','input_file_name','input_file_name()','返回读取文件的文件名，如果不可用则返回空字符串','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('200','instr','instr(str, substr)','返回str中第一次出现substr的位置（从1开始）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('201','int','int(expr)','把expr转换成int类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('202','isnan','isnan(expr)?','如果expr为NaN则返回true，否则返回false','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('203','isnotnull','isnotnull(expr)','如果expr为非null就返回true，否则返回false','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('204','isnull','isnull( a )','如果expr为null就返回true，否则返回false','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('205','java_method','java_method(class, method[, arg1[, arg2 ..]])','通过反射调用java类','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('206','json_tuple','json_tuple(jsonStr, p1, p2, ..., pn)','此方法类似get_json_object，返回一个tuple，但是可以取出多个名字，输入输出列类型都是string','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('207','kurtosis','kurtosis(expr)','返回一组值中的峰值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('208','lag','lag(input[, offset[, default]])','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('209','last','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('210','last_day','last_day(string date)','返回这个月的最后一天的日期，忽略时分秒部分（HH:mm:ss）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('211','last_value','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('212','lcase','lcase(string A)','将字符串A的所有字母转换成小写字母','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('213','lead','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('214','least','least(T v1, T v2, ...)','求最小值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('215','length','length(string A)','返回字符串的长度','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('216','levenshtein','levenshtein(string A, string B)','计算两个字符串之间的差异大小 ?如：levenshtein("kitten", "sitting") = 3','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('217','like','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('218','ln','ln(DOUBLE a), ln(DECIMAL a)','以自然数为底d的对数，a可为小数','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('219','locate','locate(string substr, string str[, int pos])','查找字符串str中的pos位置后字符串substr第一次出现的位置','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('220','log','log(DOUBLE base, DOUBLE a)或log(DECIMAL base, DECIMAL a)','以base为底的对数，base 与 a都是DOUBLE类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('221','log10','log10(DOUBLE a), log10(DECIMAL a)','以10为底d的对数，a可为小数','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('222','log1p','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('223','log2','log2(DOUBLE a), log2(DECIMAL a)','以2为底数d的对数，a可为小数','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('224','lower','lower(string A) ','将字符串A的所有字母转换成小写字母','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('225','lpad','lpad(string str, int len, string pad)','从左边开始对字符串str使用字符串pad填充，最终len长度为止，如果字符串str本身长度比len大的话，将去掉多余的部分','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('226','ltrim','ltrim(string A)','去掉字符串A前面的空格','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('227','map','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('228','map_keys',' map_keys(Map<K.V>)','返回map中的所有key','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('229','map_values','map_values(Map<K.V>)','返回map中的所有value','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('230','max','max(col)','求指定列的最大值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('231','md5','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('232','mean','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('233','min','min(col)','求指定列的最小值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('234','minute','minute(string date)','返回时间字符串的分钟','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('235','monotonically_increasing_','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('236','month','month(string date)','返回时间字符串的月份部分','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('237','months_between','months_between(date1, date2)','返回date1与date2之间相差的月份，如date1>date2，则返回正，如果date1<date2,则返回负，否则返回0.0 ?如：months_between("1997-02-28 10:30:00", "1996-10-30") = 3.94959677 ?1997-02-28 10:30:00与1996-10-30相差3.94959677个月','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('238','named_struct','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('239','nanvl','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('240','negative',' negative(INT a), negative(DOUBLE a)','返回a的相反数','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('241','next_day','next_day(string start_date, string day_of_week)','返回当前时间的下一个星期X所对应的日期 如：next_day("2015-01-14", "TU") = 2015-01-20 ?以2015-01-14为开始时间，其下一个星期二所对应的日期为2015-01-20','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('242','not','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('243','now','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('244','ntile','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('245','nullif','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('246','nvl','nvl(T value, T default_value)','如果value值为NULL就返回default_value,否则返回value','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('247','nvl2','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('248','or','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('249','parse_url','parse_url(string urlString, string partToExtract [, string keyToExtract])','返回从URL中抽取指定部分的内容，参数url是URL字符串，而参数partToExtract是要抽取的部分，这个参数包含(HOST, PATH, QUERY, REF, PROTOCOL, AUTHORITY, FILE, and USERINFO,例如：parse_url("http://facebook.com/path1/p.php?k1=v1&k2=v2#Ref1", "HOST") ="facebook.com"，如果参数partToExtract值为QUERY则必须指定第三个参数key ?如：parse_url("http://facebook.com/path1/p.php?k1=v1&k2=v2#Ref1", "QUERY", "k1") ="v1"','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('250','percent_rank','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('251','percentile','percentile(B IGINT col, p)','返回col的p%分位数','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('252','percentile_approx','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('253','pi',' pi()','数学常数pi','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('254','pmod',' pmod(INT a, INT b), pmod(DOUBLE a, DOUBLE b)','a对b取模','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('255','posexplode','posexplode(ARRAY)','与explode类似，不同的是还返回各元素在数组中的位置','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('256','positive',' positive(INT a), positive(DOUBLE a)','返回a','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('257','pow','pow(DOUBLE a, DOUBLE p)','计算a的p次幂','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('258','power','power(DOUBLE a, DOUBLE p)','计算a的p次幂','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('259','preagg','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('260','preaggload','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('261','printf','printf(String format, Obj... args)','按照printf风格格式输出字符串','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('262','quarter','quarter(date/timestamp/string)','返回当前时间属性哪个季度 如quarter("2015-04-08") = 2','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('263','radians',' radians(DOUBLE a), radians(DOUBLE a)','将角度值转换成弧度值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('264','rand','rand(), rand(INT seed)','每行返回一个DOUBLE型随机数seed是随机因子','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('265','randn','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('266','rank','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('267','reflect','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('268','regexp_extract','regexp_extract(string subject, string pattern, int index)','抽取字符串subject中符合正则表达式pattern的第index个部分的子字符串，注意些预定义字符的使用，如第二个参数如果使用"\s"将被匹配到s,"\\s"才是匹配空格','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('269','regexp_replace','regexp_replace(string INITIAL_STRING, string PATTERN, string REPLACEMENT)','按照Java正则表达式PATTERN将字符串INTIAL_STRING中符合条件的部分成REPLACEMENT所指定的字符串，如里REPLACEMENT这空的话，抽符合正则的部分将被去掉  如：regexp_replace("foobar", "oo|ar", "") = "fb." 注意些预定义字符的使用，如第二个参数如果使用"\s"将被匹配到s,"\\s"才是匹配空格','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('270','repeat','repeat(string str, int n)','重复输出n次字符串str','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('271','reverse','reverse(string A)','反转字符串','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('272','rint','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('273','rlike','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('274','rollup','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('275','round','round(DOUBLE a)','返回对a四舍五入的BIGINT值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('276','round','round(DOUBLE a,INT d)','返回DOUBLE型d的保留n位小数的DOUBLW型的近似值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('277','row_number','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('278','rpad','rpad(string str, int len, string pad)','从右边开始对字符串str使用字符串pad填充，最终len长度为止，如果字符串str本身长度比len大的话，将去掉多余的部分','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('279','rtrim','rtrim(string A)','去掉字符串后面出现的空格','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('280','second','second(string date)','返回时间字符串的秒','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('281','sentences','sentences(string str, string lang, string locale)','字符串str将被转换成单词数组，如：sentences("Hello there! How are you?") =( ("Hello", "there"), ("How", "are", "you") )','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('282','sha','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('283','sha1','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('284','sha2','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('285','shiftleft','shiftleft(TINYINT|SMALLINT|INT a, INT b)或shiftleft(BIGINT a, INT b)','按位左移','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('286','shiftright','shiftright(TINYINT|SMALLINT|INT a, INTb)或shiftright(BIGINT a, INT b)','按拉右移','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('287','shiftrightunsigned','shiftrightunsigned(TINYINT|SMALLINT|INTa, INT b)或shiftrightunsigned(BIGINT a, INT b)','无符号按位右移（<<<）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('288','sign',' sign(DOUBLE a), sign(DECIMAL a)','如果a是正数则返回1.0，是负数则返回-1.0，否则返回0.0','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('289','signum','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('290','sin','sin(DOUBLE a), sin(DECIMAL a)','求a的正弦值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('291','sinh','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('292','size',' size(Array<T>)','求数组的长度','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('293','size',' size(Map<K.V>)','求map的长度','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('294','skewness','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('295','smallint','','','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('296','sort_array','sort_array(array[, ascendingOrder])','按自然顺序对数组进行排序并返回','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('297','soundex','soundex(str)','将普通字符串转换成soundex编码','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('298','space','space(n)','返回一个由n个空格组成的字符串','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('299','spark_partition_id','spark_partition_id()','返回当前partition的id','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('300','split','split(str, regex)','将str中能匹配regex表达式的作为分隔符，str分割成一个数组并返回','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('301','sqrt','sqrt(expr)?','返回expr的平方根','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('302','stack','stack(n, expr1, ..., exprk)','将expr1,....exprk放到n行中','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('303','std','std(expr)?','返回expr列的样本标准偏差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('304','stddev','stddev(expr)','返回expr列的样本标准偏差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('305','stddev_pop','stddev_pop(expr)','返回expr列的总体标准偏差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('306','stddev_samp','stddev_samp(expr)','返回expr列的样本标准偏差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('307','str_to_map','str_to_map(text[, pairDelim[, keyValueDelim]])','将字符串text按照指定分隔符转换成Map，pairDelim是键值对之间的分隔符，默认为",",keyValueDelim是键值之间的分隔符，默认为":"','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('308','string','string(expr)','将expr转换成string类型','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('309','struct','struct(col1, col2, col3, ...)?','创建含有col1,col2,col3...域值的struct','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('310','substr','substr(str, pos[, len])','截取(字符串/byte数组)str从pos开始到len这么长的字符串/byte数组，如果len没有给定，则之后的全部截取，pos可以为负数时则从右往左截取','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('311','substring','substring(str, pos[, len])','截取(字符串/byte数组)str从pos开始到len这么长的字符串/byte数组，如果len没有给定，则之后的全部截取，pos可以为负数时则从右往左截取','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('312','substring_index','substring_index(str, delim, count)','截取第count个分隔符delim之前的字符串，如count为正则从左边开始截取，如果为负则从右边开始截取','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('313','sum','sum(expr)','返回expr列的总和','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('314','tan','tan(expr)','返回expr的正切值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('315','tanh','tan(expr)','返回expr的双曲正切值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('316','timeseries','N/A','N/A','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('317','timestamp','timestamp(expr)','将expr转换成timestamp格式','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('318','tinyint','tinyint(expr)','将expr转换成tinyint格式','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('319','to_date','to_date(date_str[, fmt])','按照fmt表达式将字符串date_str转换成date格式，如果date_str属于非法输入则返回null，如果fmt参数没有提供的话就默认使用规则日期转换','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('320','to_unix_timestamp','to_unix_timestamp(expr[, pattern])','返回给定的expr时间转换成unix时间戳，并按照pattern格式格式化（如果给定parttern参数的话）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('321','to_utc_timestamp','to_utc_timestamp(timestamp, timezone)','将给定的timezone时区下的时间戳timestamp转化成UTC下的时间戳','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('322','translate','translate(input, from, to)','将input字符串中的字母从from中的字母替换成按照位置对应的to中的字母','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('323','trim','trim(str)','将字符串str前后的空格全部去掉','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('324','trunc','trunc(date, fmt)','通过fmt指定的格式返回给定的date的开始值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('325','ucase','ucase(str)','将字符串str中的所有字母转换成大写字母','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('326','unbase64','unbase64(string str)','将base64字符串转换成二进制','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('327','unhex','unhex(expr)','将十六进制的expr转换为二进制','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('328','unix_timestamp','unix_timestamp([expr[, pattern]])','返回当前日期指定expr日期的unix时间，如果有pattern参数，则按照pattern格式化unix时间','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('329','upper','upper(str)?','放回将str全部字母转为大写的字符串','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('330','var_pop','var_pop(col)','返回expr列所有数值的总体方差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('331','var_samp','var_samp(expr)','返回expr列所有数值的样本方差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('332','variance','variance(expr)','返回expr列所有数值的样本方差','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('333','weekofyear','weekofyear(date)','返回给定的这个date是这一年内第几个星期，一个星期从星期一开始，一年的第四天就为第一个星期了','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('334','when','CASE WHEN expr1 THEN expr2 [WHEN expr3 THEN expr4]* [ELSE expr5] END','如果expr=true则返回expr2，当expr3=true，则返回expr4，否则返回expr5','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('335','window','N/A','N/A','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('336','window','xpath(xml, xpath)','返回一组匹配xpath表达式的xml节点内的字符串（Array）','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('337','xpath_boolean','','如果xpath表达式的计算结果为true，或者找到了匹配节点，则返回true。','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('338','xpath_double','xpath_double(xml, xpath)?','返回一个double值，如果没有找到能匹配xpath表达式的值，这返回0，如果找到了能匹配xpath表达式的值但不是numric类型则返回NaN','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('339','xpath_float','xpath_float(xml, xpath)','返回一个float值，如果没有找到能匹配xpath表达式的值，这返回0，如果找到了能匹配xpath表达式的值但不是numric类型则返回NaN','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('340','xpath_int','xpath_int(xml, xpath)?','返回一个integer值，如果没有找到能匹配xpath表达式的值，这返回0，如果找到了能匹配xpath表达式的值但不是numric类型则返回NaN','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('341','xpath_long','xpath_long(xml, xpath)','返回一个long值，如果没有找到能匹配xpath表达式的值，这返回0，如果找到了能匹配xpath表达式的值但不是numric类型则返回NaN','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('342','xpath_number','xpath_number(xml, xpath)','返回一个double值，如果没有找到能匹配xpath表达式的值，这返回0，如果找到了能匹配xpath表达式的值但不是numric类型则返回NaN','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('343','xpath_short','xpath_short(xml, xpath)','返回一个short值，如果没有找到能匹配xpath表达式的值，这返回0，如果找到了能匹配xpath表达式的值但不是numric类型则返回NaN','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('344','xpath_string','xpath_string(xml, xpath)','返回第一个匹配 XPath 表达式的 xml节点的文本内容','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('345','year','year(date)?','返回date的年的值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('346','|','expr1 | expr2','返回expr1按位或expr2的值','0','1','0');
insert into edw_sparksql_gram(esg_id,function_name,function_example,function_desc,is_available,is_udf,is_sparksql) values ('347','~','~ expr','返回expr按位取反的值','0','1','0');