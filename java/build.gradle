// 定义全局变量。各子模块使用 rootProject.ext 引用
ext {
    currentDateTime = new Date().format("yyyy-MM-dd HH:mm:ssZ")
}

allprojects {
    group 'hrds'  // 修改为本工程的真实 GroupId。必须要修改。后续每个子工程都应该使用这个前缀作为包的根
    version '5.0'
}

subprojects {
    apply plugin: 'java'

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
        options.compilerArgs += "-parameters"
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
        options.compilerArgs += "-parameters"
    }

    repositories {
        mavenLocal()
        maven { url 'http://139.9.126.19:38877/repository/hyren-maven-group/' }
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }

    configurations {
        provided
        // 所有需要忽略的包定义在此
        //all*.exclude group: 'commons-httpclient'
        //all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }

    dependencies {
        if (project.name == "hrds-commons") {
            compile fileTree(dir: "$rootDir/libs/runtime", include: ['*.jar'])
        }
        if (project.name != "hrds-commons") {
            compile project(':hrds-commons')
        }


        compile group: 'org.apache.hive', name: 'hive-storage-api', version: '2.6.0'
        compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
        compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.19.v20190610'
        compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.19.v20190610'
        compile group: 'org.eclipse.jetty', name: 'jetty-jmx', version: '9.4.19.v20190610'
        compile group: 'org.eclipse.jetty', name: 'jetty-security', version: '9.4.19.v20190610'
        compile group: 'org.eclipse.jetty', name: 'jetty-http', version: '9.4.19.v20190610'
        compile group: 'org.eclipse.jetty', name: 'jetty-io', version: '9.4.19.v20190610'
        compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.13.1'
        compile group: 'net.viktorc', name: 'pp4j', version: '2.2'
        compile group: 'com.univocity', name: 'univocity-parsers', version: '2.8.2'
        compile group: 'antlr', name: 'antlr', version: '2.7.7'
        compile group: 'net.java.dev.jna', name: 'jna', version: '3.2.5'
        compile group: 'org.mapdb', name: 'mapdb', version: '1.0.9'
        compile group: 'org.apache.xmlrpc', name: 'xmlrpc-common', version: '3.1.3'
        compile group: 'org.apache.xmlrpc', name: 'xmlrpc-client', version: '3.1.3'
        compile group: 'it.uniroma1.dis.wsngroup.gexf4j', name: 'gexf4j', version: '1.0.0'

        /** log */
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'

        /** columnar files */
        compile group: 'org.apache.parquet', name: 'parquet-column', version: '1.10.0'
        compile group: 'org.apache.parquet', name: 'parquet-hadoop', version: '1.10.0'
        compile group: 'org.apache.orc', name: 'orc-mapreduce', version: '1.5.2'

        /** apache commons */
        compile group: 'commons-io', name: 'commons-io', version: '2.6'
        compile group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
        compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.4.2'
        compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
        compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
        /** hadoop */
        compile group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '2.6.0'
        compile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: '2.6.0'
        compile group: 'org.apache.hadoop', name: 'hadoop-yarn-client', version: '2.6.0'

        /** hbase */
        compile group: 'org.apache.hbase', name: 'hbase-common', version: '1.2.0'
        compile group: 'org.apache.hbase', name: 'hbase-client', version: '1.2.0'
        compile group: 'org.apache.hbase', name: 'hbase-server', version: '1.2.0'
        /** hive */
        compile group: 'org.apache.hive', name: 'hive-exec', version: '1.2.1'
        compile group: 'org.apache.hive', name: 'hive-jdbc', version: '1.2.1'
        /** solr */
        compile group: 'org.apache.solr', name: 'solr-solrj', version: '5.3.1'
        // solr分词
        compile group: 'com.hankcs', name: 'hanlp', version: 'portable-1.2.8'
        /** spark */
        compile group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.3.2'
        provided group: 'org.apache.spark', name: 'spark-yarn_2.11', version: '2.3.2'

        /** database driver */
        compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
        compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.31'
        compile group: 'org.postgresql', name: 'postgresql', version: '42.2.6'
        compile group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '12.2.0.1'
        // jdbc连接池
        compile group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'
        /** tools */
        // zip 解压缩
        compile group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'
        // sql解析
        compile group: 'com.alibaba', name: 'druid', version: '1.1.16'
        // json解析
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.60'
        // office解析
        compile group: 'org.apache.poi', name: 'poi', version: '3.12'
        compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.12'
        compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.12'
        compile group: 'org.apache.poi', name: 'poi-scratchpad', version: '3.12'
        // csv文件解析
        compile group: 'net.sf.supercsv', name: 'super-csv', version: '2.4.0'
        // pdf文本提取
        compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.9'
        // tess4j 图片文本提取
        compile (group: 'net.sourceforge.tess4j', name: 'tess4j', version: '3.4.7'){
            exclude group: 'ch.qos.logback'
            exclude group: 'org.slf4j'
        }
        // 字符编码检测
        compile (group: 'net.sourceforge.jchardet', name: 'jchardet', version: '1.0'){transitive = false}
        // 汉字转拼音
        compile group: 'com.belerweb', name: 'pinyin4j', version: '2.5.0'
        // ssh2传输
        compile group: 'com.jcraft', name: 'jsch', version: '0.1.54'
        /** 解析request请求头信息 */
        // UserAgentUtils获取请求信息
        compile group: 'eu.bitwalker', name: 'UserAgentUtils', version: '1.21'
        testCompile fileTree(dir: "$rootDir/libs/testcase", include: ['*.jar'])
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    }

    // -------------  模块打包  -------------
    def appMainClass = "${project.group}.main.AppMain"
    // 正式发布时，打开注释，目的：不将resources打包到jar文件内
    processResources {
        exclude { "**/*.*" }
    }

    jar {
        archivesBaseName = "${project.name}"

        String classpaths = 'resources/' // 存放资源文件的目录
        configurations.runtime.each { classpaths = classpaths + " ../lib/" + it.name } //遍历项目的所有依赖的jar包赋值给变量someString

        manifest {
            attributes(
                    'Main-Class': appMainClass,
                    'Class-Path': classpaths,
                    "Implementation-Title": archivesBaseName,
                    "Implementation-Version": project.version,
                    'Built-By': System.getProperty('user.name'),
                    'Built-JDK': System.getProperty('java.version'),
                    'Source-Compatibility': project.sourceCompatibility,
                    'Target-Compatibility': project.targetCompatibility,
                    "Build-Time": rootProject.ext.currentDateTime
            )
        }
    }

    task clearJar(type: Delete) {
        delete "$buildDir/libs/lib"
//        followSymlinks = true
    }
    task copyJar(type: Sync) {
        from configurations.runtime
        into "$buildDir/libs/lib"
    }
    task copyResource(type: Sync) {
        // 因为resources没有打包到jar里面，所以这里自动复制到发布目录下
       sourceSets.main.resources.srcDirs.each {
            from it
            into "$buildDir/libs/resources"
        }
    }
    task release(dependsOn: [build, copyJar, copyResource]) {
        //println("release Done.")
    }

    def createDir = {
        path->
            File dir=new File(path);
            if (!dir.exists()){
                dir.mkdirs();
            }
    }
    task moveSQL(type: Copy) {
        if (project.name == "hrds-commons") {
            from "$rootDir/hrds-commons/src/main/java/hrds/commons/script"
            into "$rootDir/../app/dbscript"
            include "*.sql"
        }
    }
    task moveBranch(type: Copy,dependsOn:[moveSQL]) {
        def appname = "${project.name}"
        if (project.name != "hrds-commons"
                && project.name != "hrds_Trigger"
                && project.name != "hrds_Control"
                && project.name != "hrds_Agent") {
            delete "$buildDir/libs/lib"
            appname = appname.replace("hrds_","");
            from "build/libs"
            into "$rootDir/../app/" + appname + "/dist"

           def paths = ["$rootDir/../app/" + appname + "/logs",
                        "$rootDir/../app/" + appname + "/progout",
                        "$rootDir/../app/" + appname + "/bin",
                        "$rootDir/../app/frontend"];
            doFirst {
                paths.forEach(createDir);
            }
        }
        if (project.name == "hrds_Trigger"
                || project.name == "hrds_Control"
                || project.name == "hrds_Agent") {
            println("release Done.")
            delete "$buildDir/libs/lib"
            from "build/libs/"
            into "$rootDir/../app/Agent"
            include "*.jar"
        }
        if (project.name == "hrds-commons") {
            from "$buildDir/libs/lib"
            into "$rootDir/../app/lib"
            include "*.jar"

            from "build/libs/"
            into "$rootDir/../app/lib"
            include "*.jar"
        }
    }
}

